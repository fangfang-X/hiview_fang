/*
* simple xml binding
* email: 25088970@qq.com
*/

#if 1 //#ifndef __sxb_api_h__
#define __sxb_api_h__
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include "fw/mxml/inc/mxml.h"


#define STRUCT(TYPE) typedef struct _##TYPE TYPE;\
                     extern void sxb_bind_##TYPE(mxml_node_t* xml  /* sxb_bind_TYPE */ \
                                    , int m                   /* 0: to xml, 1: from xml */ \
                                    , TYPE *str               /* C struct */ \
                                    , int i                   /* 0 */ \
                                    , int size);              /* 0 */ \
                     struct _##TYPE
                 
#define string        char
#define uint64        unsigned long long
#define uint32        unsigned int
#define uint16        unsigned short
#define uint8         unsigned char
#define bool          int

#define STRING(X,Y)   char X[Y]
#define FIELD(X,Y)    X Y
#define UNION_B(K)    union { char __          /* UNION_B(union_type); */
#define UNION_C(cond, type, val) type val      /* UNION_C(union_type_xxx, type, val); */
#define UNION_S(cond, val, size) char val[size]/* UNION_S(union_type_xxx, val, size); */ 
#define UNION_E() }                            /* UNION_E(); */

#ifdef __ELE__
#define __ELE_DEF(e)     int e##__;
#define ELE_NUM_SET(e)   e##__
#define ELE_NUM_GET(e)   e##__
#else
#define __ELE_DEF(e)
static  int __ele__;      //dummy;
#define ELE_NUM_SET(e)    __ele__
#define ELE_NUM_GET(e)   (sizeof(e)/sizeof(e[0]))
#endif

#define ARRAY(X,Y,Z)      __ELE_DEF(Y) X Y[Z]

#endif //__sxb_api_h__